{"ast":null,"code":"var _jsxFileName = \"/home/bahnasawy/Desktop/Mi-Armario/client/src/components/Login.js\";\nimport React from 'react';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\nimport sha256 from 'js-sha256';\nimport crypto from 'crypto';\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user_id: \"\",\n      username: \"\",\n      error: true,\n      products: []\n    };\n    this.username = React.createRef();\n    this.password = React.createRef();\n    this.login = this.login.bind(this);\n    this.getProucts = this.getProucts.bind(this);\n    this.getCart = this.getCart.bind(this);\n    this.logout = this.logout.bind(this);\n    this.makeOrder = this.makeOrder.bind(this);\n    this.clearCart = this.props.clearCart;\n  }\n\n  async login() {\n    if (this.username.current.value && this.password.current.value) {\n      const password = sha256(this.password.current.value);\n      const username = this.username.current.value;\n      const query = `{customer(input:{username: \"${username}\", password: \"${password}\", id:\"\"}){id username}}`;\n      const options = {\n        url: \"http://localhost:8081/graphql\",\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        data: {\n          \"query\": query\n        }\n      };\n      const response = await axios(options);\n\n      if (response.data.data.customer.length !== 0) {\n        const cookie = JSON.parse(Cookies.get('mi-armario'));\n        cookie.user_id = response.data.data.customer[0].id;\n        cookie.username = response.data.data.customer[0].username;\n        Cookies.set('mi-armario', cookie);\n        this.setState({\n          user_id: response.data.data.customer[0].id,\n          username: response.data.data.customer[0].username\n        });\n      } else {\n        this.setState({\n          error: false\n        });\n      }\n    } else {\n      this.setState({\n        error: false\n      });\n    }\n  }\n\n  async getProucts() {\n    const query = `{product{id name}}`;\n    const options = {\n      url: \"http://localhost:8081/graphql\",\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      data: {\n        \"query\": query\n      }\n    };\n    const response = await axios(options);\n    this.setState({\n      products: response.data.data.product\n    });\n  }\n\n  logout() {\n    const cookie = JSON.parse(Cookies.get('mi-armario'));\n    cookie.cart = {};\n    cookie.username = \"\";\n    cookie.user_id = \"\";\n    Cookies.set('mi-armario', cookie);\n    this.clearCart();\n    this.setState({\n      user_id: \"\",\n      username: \"\",\n      cart: {}\n    });\n  }\n\n  getCart() {\n    const items = [];\n\n    if (Object.keys(this.props.cart).length > 0) {\n      try {\n        Object.keys(this.props.cart).map(key => {\n          return this.state.products.forEach(product => {\n            if (key === product.id) {\n              items.push( /*#__PURE__*/React.createElement(\"div\", {\n                className: \"dropdown-item\",\n                key: key,\n                onClick: this.getProucts,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 33\n                }\n              }, product.name, \": \", this.props.cart[key]));\n            }\n          });\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"font-weight-bold\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }\n        }, \"Your Cart\"), items, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-outline-dark\",\n          onClick: this.makeOrder,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }\n        }, \"Order\"));\n      } catch (error) {\n        return null;\n      }\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, \"Your Cart is Empty\"));\n    }\n  }\n\n  async makeOrder() {\n    let id = crypto.randomBytes(5).toString('hex');\n    let query;\n    let variables;\n    let sale;\n    let sale_item = [];\n    let set = [];\n    let where = [];\n    let sale_item_id = [];\n    let product_sets = [];\n    let product_wheres = [];\n    let sale_items = [];\n    let product_set_vars = [];\n    let product_where_vars = [];\n    let sale_item_vars = [];\n    let updates = [];\n    let inserts = [];\n    let cookie = JSON.parse(Cookies.get('mi-armario'));\n\n    for (let i = 0; i < this.props.products.length; i++) {\n      Object.keys(this.props.cart).forEach(key => {\n        if (this.props.products[i].id === key) {\n          set.push(`\"quantity\": ${this.props.products[i].quantity}`);\n          where.push(`\"id\": \"${key}\"`);\n          sale_item_id.push(`\"product_id\": \"${key}\"`);\n          sale_item.push(`\"quantity\": ${this.props.cart[key]}`);\n        }\n      });\n    }\n\n    sale = `\n            \"sale\":{\n                \"sale\": {\n                    \"id\": \"${id}\",\n                    \"status\": \"pending\",\n                    \"customer_id\": \"${cookie.user_id}\"\n                  }\n            }`;\n\n    for (let i = 0; i < set.length; i++) {\n      product_sets.push(`\"product_set${i}\": {\n                \"product\": {\n                    ${set[i]}\n                }\n            }`);\n      product_wheres.push(`\"product_where${i}\": {\n                \"product\": {\n                    ${where[i]}\n                }\n            }`);\n      sale_items.push(`\"sale_item${i}\": {\n                \"sale_item\": {\n                    ${sale_item[i]},\n                    ${sale_item_id[i]},\n                    \"sale_id\":\"${id}\"\n                }\n            }`);\n      product_set_vars.push(`$product_set${i}: Tables!`);\n      product_where_vars.push(`$product_where${i}: Tables!`);\n      sale_item_vars.push(`$sale_item${i}: Tables!`);\n    }\n\n    variables = `{\n            ${product_sets.join(\",\\n\")},\n            ${product_wheres.join(\",\\n\")},\n            ${sale},\n            ${sale_items.join(\",\\n\")}\n        }`;\n\n    for (let i = 0; i < product_sets.length; i++) {\n      updates.push(`product${i}: update(set:$product_set${i} where:$product_where${i})`);\n      inserts.push(`sale_item${i}: insert(input:$sale_item${i})`);\n    }\n\n    query = `mutation(\n            ${product_set_vars.join(\",\\n\")},\n            ${product_where_vars.join(\",\\n\")},\n            ${sale_item_vars.join(\",\\n\")}\n            $sale: Tables!){\n            sale: insert(input:$sale)\n            ${updates.join(\",\\n\")}\n            ${inserts.join(\",\\n\")}\n          }`;\n    const options = {\n      url: \"http://localhost:8081/graphql\",\n      method: \"POST\",\n      headers: {\n        'content-type': 'application/json'\n      },\n      data: {\n        \"query\": query,\n        \"variables\": variables\n      }\n    }; // console.log(options)\n\n    const response = await axios(options);\n    console.log(response);\n    cookie.cart = {};\n    Cookies.set('mi-armario', cookie);\n    this.clearCart();\n    this.setState({\n      cart: {}\n    });\n  }\n\n  componentDidMount() {\n    try {\n      const cookie = JSON.parse(Cookies.get('mi-armario'));\n\n      if (cookie.username !== \"\") {\n        this.setState({\n          username: cookie.username\n        });\n      }\n    } catch (e) {}\n\n    this.getProucts();\n  }\n\n  render() {\n    if (this.state.username === \"\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex btn-group dropdown container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-light border border-light rounded-1 mr-2 dropdown-toggle\",\n        type: \"button\",\n        style: {\n          fontFamily: 'DM Mono, monospace',\n          fontSize: 'small',\n          fontWeight: 500\n        },\n        \"data-toggle\": \"dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown-menu dropdown-menu-right p-2\",\n        \"aria-labelledby\": \"dropdownMenuButton\",\n        style: {\n          width: \"300px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 29\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        ref: this.username,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"form-text text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 113\n        }\n      }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 29\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"password\",\n        ref: this.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-dark float-right\",\n        onClick: this.login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        hidden: this.state.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }\n      }, \"*Wrong Username or Password\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex btn-group dropdown container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-light border border-light rounded-1 mr-2 dropdown-toggle\",\n        type: \"button\",\n        style: {\n          fontFamily: 'DM Mono, monospace',\n          fontSize: 'small',\n          fontWeight: 500\n        },\n        \"data-toggle\": \"dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }\n      }, this.state.username), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown-menu dropdown-menu-right p-2\",\n        \"aria-labelledby\": \"dropdownMenuButton\",\n        style: {\n          width: \"300px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }\n      }, this.getCart()), /*#__PURE__*/React.createElement(\"div\", {\n        role: \"separator\",\n        className: \"dropdown-divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-dark float-right\",\n        onClick: this.logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }\n      }, \"Logout\")));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/bahnasawy/Desktop/Mi-Armario/client/src/components/Login.js"],"names":["React","Cookies","axios","sha256","crypto","Login","Component","constructor","props","state","user_id","username","error","products","createRef","password","login","bind","getProucts","getCart","logout","makeOrder","clearCart","current","value","query","options","url","method","headers","data","response","customer","length","cookie","JSON","parse","get","id","set","setState","product","cart","items","Object","keys","map","key","forEach","push","name","randomBytes","toString","variables","sale","sale_item","where","sale_item_id","product_sets","product_wheres","sale_items","product_set_vars","product_where_vars","sale_item_vars","updates","inserts","i","quantity","join","console","log","componentDidMount","e","render","fontFamily","fontSize","fontWeight","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Cookies from 'js-cookie'\nimport axios from 'axios'\nimport sha256 from 'js-sha256'\nimport crypto from 'crypto'\n\nexport default class Login extends React.Component \n{\n    constructor(props) {\n        super(props)\n        this.state = {user_id: \"\", username: \"\", error:true, products: []}\n        this.username = React.createRef()\n        this.password = React.createRef()\n\n        this.login = this.login.bind(this)\n        this.getProucts = this.getProucts.bind(this)\n        this.getCart = this.getCart.bind(this)\n        this.logout = this.logout.bind(this)\n        this.makeOrder = this.makeOrder.bind(this)\n        this.clearCart = this.props.clearCart\n    }\n\n    async login() {\n        if (this.username.current.value && this.password.current.value)\n        {\n            const password = sha256(this.password.current.value)\n            const username = this.username.current.value\n            const query = `{customer(input:{username: \"${username}\", password: \"${password}\", id:\"\"}){id username}}`\n            const options = {\n                url: \"http://localhost:8081/graphql\",\n                method: \"POST\",\n                headers: {'Accept': 'application/json',\n                'Content-Type': 'application/json'},\n                data: {\n                    \"query\": query\n                }\n            }\n            const response = await axios(options)\n            if (response.data.data.customer.length !== 0)\n            {\n                const cookie = JSON.parse(Cookies.get('mi-armario'))\n                cookie.user_id = response.data.data.customer[0].id\n                cookie.username = response.data.data.customer[0].username\n                Cookies.set('mi-armario', cookie)\n                this.setState({\n                    user_id: response.data.data.customer[0].id, \n                    username: response.data.data.customer[0].username})\n            }\n            else{\n                this.setState({ error: false })\n            }\n        }\n        else {\n            this.setState(\n                {error:false}\n            )\n        }\n    }\n\n    async getProucts(){\n        const query = `{product{id name}}`\n        const options = {\n            url: \"http://localhost:8081/graphql\",\n            method: \"POST\",\n            headers: {'Accept': 'application/json',\n            'Content-Type': 'application/json'},\n            data: {\n                \"query\": query\n            }\n        }\n        const response = await axios(options)\n        this.setState({products: response.data.data.product})\n    }\n\n    logout()\n    {\n        const cookie = JSON.parse(Cookies.get('mi-armario'))\n        cookie.cart = {}\n        cookie.username = \"\"\n        cookie.user_id = \"\"\n        Cookies.set('mi-armario', cookie)\n        this.clearCart()\n        this.setState({\n            user_id: \"\",\n            username: \"\",\n            cart: {}\n        })\n    }\n\n    getCart()\n    {\n        const items = []\n        if (Object.keys(this.props.cart).length > 0)\n        {\n            try{\n                Object.keys(this.props.cart).map(key => {\n                    return this.state.products.forEach(product => {\n                        if (key === product.id)\n                        {\n                            items.push(\n                                <div className=\"dropdown-item\" key={key} onClick={this.getProucts}>\n                                    {product.name}: {this.props.cart[key]}\n                                </div>\n                            )\n                        }\n                    })\n                })\n                return (<div>\n                            <label className=\"font-weight-bold\">Your Cart</label>\n                            {items}\n                            <button className=\"btn btn-outline-dark\" onClick={this.makeOrder}>Order</button>\n                        </div>)\n            }\n            catch (error) {return null}\n        }\n        else\n        {\n            return (<div>\n                <label className=\"font-weight-bold\">Your Cart is Empty</label>\n            </div>)\n        }\n    }\n\n    async makeOrder()\n    {\n        let id = crypto.randomBytes(5).toString('hex')\n        let query;\n        let variables;\n        let sale;\n        let sale_item = [];\n        let set = [];\n        let where = [];\n        let sale_item_id = []\n        let product_sets = []\n        let product_wheres = []\n        let sale_items = []\n        let product_set_vars = []\n        let product_where_vars = []\n        let sale_item_vars = []\n        let updates = []\n        let inserts = []\n\n        let cookie = JSON.parse(Cookies.get('mi-armario'))\n\n        for(let i = 0; i < this.props.products.length;i++)\n        {\n            Object.keys(this.props.cart).forEach(key => {\n                if (this.props.products[i].id === key)\n                {\n                    set.push(`\"quantity\": ${this.props.products[i].quantity}`)\n                    where.push(`\"id\": \"${key}\"`)\n                    sale_item_id.push(`\"product_id\": \"${key}\"`)\n                    sale_item.push(`\"quantity\": ${this.props.cart[key]}`)\n                }\n                \n            })\n        }\n\n        sale = `\n            \"sale\":{\n                \"sale\": {\n                    \"id\": \"${id}\",\n                    \"status\": \"pending\",\n                    \"customer_id\": \"${cookie.user_id}\"\n                  }\n            }`\n            \n\n        for (let i = 0; i < set.length; i++)\n        {\n            product_sets.push(`\"product_set${i}\": {\n                \"product\": {\n                    ${set[i]}\n                }\n            }`)\n            product_wheres.push(`\"product_where${i}\": {\n                \"product\": {\n                    ${where[i]}\n                }\n            }`)\n\n            sale_items.push(`\"sale_item${i}\": {\n                \"sale_item\": {\n                    ${sale_item[i]},\n                    ${sale_item_id[i]},\n                    \"sale_id\":\"${id}\"\n                }\n            }`)\n\n            product_set_vars.push(`$product_set${i}: Tables!`)\n            product_where_vars.push(`$product_where${i}: Tables!`)\n            sale_item_vars.push(`$sale_item${i}: Tables!`)\n        }\n\n        variables = `{\n            ${product_sets.join(\",\\n\")},\n            ${product_wheres.join(\",\\n\")},\n            ${sale},\n            ${sale_items.join(\",\\n\")}\n        }`\n\n        for(let i = 0; i < product_sets.length; i++){\n            updates.push(`product${i}: update(set:$product_set${i} where:$product_where${i})`)\n            inserts.push(`sale_item${i}: insert(input:$sale_item${i})`)\n        }\n\n        query = `mutation(\n            ${product_set_vars.join(\",\\n\")},\n            ${product_where_vars.join(\",\\n\")},\n            ${sale_item_vars.join(\",\\n\")}\n            $sale: Tables!){\n            sale: insert(input:$sale)\n            ${updates.join(\",\\n\")}\n            ${inserts.join(\",\\n\")}\n          }`\n        \n        const options = {\n            url: \"http://localhost:8081/graphql\",\n            method: \"POST\",\n            headers: {'content-type': 'application/json'},\n            data: {\n                \"query\": query,\n                \"variables\": variables\n            }\n        }\n\n        // console.log(options)\n        const response = await axios(options)\n        console.log(response)\n\n        cookie.cart = {}\n        Cookies.set('mi-armario', cookie)\n        this.clearCart()\n        this.setState({\n            cart: {}\n        })\n    }\n\n    componentDidMount() {\n        try{\n            const cookie = JSON.parse(Cookies.get('mi-armario'))\n            if (cookie.username !== \"\")\n            {\n                this.setState({username: cookie.username})\n            }\n        }\n        catch (e) {}\n        this.getProucts()\n    }\n\n    render() {\n        if (this.state.username === \"\")\n        {\n            return (\n                <div className=\"d-flex btn-group dropdown container-fluid\">\n                    <button \n                    className=\"btn btn-light border border-light rounded-1 mr-2 dropdown-toggle\"\n                    type=\"button\"\n                    style={{fontFamily: 'DM Mono, monospace', fontSize: 'small', fontWeight: 500}}\n                    data-toggle=\"dropdown\">\n                        Login\n                    </button>\n                    <div className=\"dropdown-menu dropdown-menu-right p-2\" aria-labelledby=\"dropdownMenuButton\" style={{width:\"300px\"}}>\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-bold\">Username</label>\n                            <input className=\"form-control\" type=\"text\" ref={this.username} autoComplete=\"off\"/><small className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-bold\">Password</label>\n                            <input className=\"form-control\" type=\"password\" ref={this.password}/>\n                        </div>\n                        <button className=\"btn btn-outline-dark float-right\" onClick={this.login}>Login</button>\n                        <small className=\"text-danger\" hidden={this.state.error}>*Wrong Username or Password</small>\n                    </div>\n                </div>\n            )\n        }\n        else\n        {\n            return (\n                <div className=\"d-flex btn-group dropdown container-fluid\">\n                    <button \n                    className=\"btn btn-light border border-light rounded-1 mr-2 dropdown-toggle\"\n                    type=\"button\"\n                    style={{fontFamily: 'DM Mono, monospace', fontSize: 'small', fontWeight: 500}}\n                    data-toggle=\"dropdown\">\n                        {this.state.username}\n                    </button>\n                    <div className=\"dropdown-menu dropdown-menu-right p-2\" aria-labelledby=\"dropdownMenuButton\" style={{width:\"300px\"}}>\n                        <div>\n                            {this.getCart()}\n                        </div>\n                        <div role=\"separator\" className=\"dropdown-divider\"></div>\n                        <button className=\"btn btn-outline-dark float-right\" onClick={this.logout}>Logout</button>\n                    </div>\n                </div>\n            )\n        }\n    }\n} "]},"metadata":{},"sourceType":"module"}