{"version":3,"sources":["components/Product.js","components/Home.js","components/About.js","components/Contact.js","components/Upload.js","components/Login.js","index.js"],"names":["Product","props","state","show","product","imgs","bind","showModal","hideModal","addToCart","query","updateCart","quantity","React","createRef","undefined","this","Array","length","keys","map","index","className","key","style","width","height","src","category","alt","list","temp","i","push","onClick","marginLeft","marginRight","setState","type","variables","options","url","method","headers","data","axios","id","cookie","JSON","parse","Cookie","get","username","cart","isNaN","parseInt","current","value","set","stringify","products","e","name","price","size","forEach","replace","Modal","onHide","dialogClassName","Header","fontSize","Body","min","max","defaultValue","ref","aria-label","aria-describedby","Footer","Component","Home","inactive","fontFamily","fontWeight","active","black","gray","0","1","2","3","4","setActive","setStyle","setClass","categories","getProducts","fetch","body","request","json","picture","letterSpacing","About","Contact","Upload","image","handleSubmit","event","preventDefault","formData","FormData","append","files","config","post","then","response","alert","catch","error","onSubmit","accept","Login","user_id","password","login","getProucts","getCart","logout","makeOrder","clearCart","sha256","customer","Cookies","items","Object","crypto","randomBytes","toString","sale_item","where","sale_item_id","product_sets","product_wheres","sale_items","product_set_vars","product_where_vars","sale_item_vars","updates","inserts","sale","join","console","log","data-toggle","aria-labelledby","autoComplete","hidden","role","Root","ReactDOM","render","document","getElementById","withCredentials","exact","path"],"mappings":"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","file":"static/js/main.2652fedb.chunk.js","sourcesContent":["import React from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Cookie from 'js-cookie'\nimport axios from 'axios'\n\nexport default class Product extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {show: false, product: \"0\"}\n    this.imgs = this.imgs.bind(this)\n    this.showModal = this.showModal.bind(this)\n    this.hideModal = this.hideModal.bind(this)\n    this.addToCart = this.addToCart.bind(this)\n    this.query = this.query.bind(this)\n    this.updateCart = this.props.updateCart\n\n    this.quantity = React.createRef()\n  }\n\n  imgs()\n  {\n    if (this.props.imgs !== undefined && this.props.imgs !== null)\n    {\n      let imgs = [...Array(this.props.imgs.length).keys()]\n      .map(index => <img\n        className=\"p-2 rounded img-thumbnail\" \n        key={index} \n        style={{width: \"200px\", height: \"200px\"}} \n        src={`./images/${this.props.category}/${this.props.imgs[index]}`} \n        alt={index}></img>\n      )\n      let list = []\n      let temp = []\n      for(let i = 0; i < imgs.length; i++)\n      {\n        temp.push(<td onClick={this.showModal.bind(this,this.props.imgs[i])} key={i}>{imgs[i]}</td>)\n        if ((i % 4 === 0 && i !== 0) || (imgs.length < 5 && i === imgs.length - 1) || (i === imgs.length - 1))\n        {\n          list.push(<tr key={i} className=\"d-flex justify-content-center\">{temp}</tr>)\n          temp = []\n        }\n      }\n      return(\n        <table style={{marginLeft: \"auto\", marginRight: \"auto\"}} className=\"table-borderless\">\n          <tbody>\n            {list}\n          </tbody>\n        </table>\n      )\n    }\n  }\n\n  showModal(i)\n  {\n    this.setState({show: true, product: i})\n  }\n\n  hideModal()\n  {\n    this.setState({show: false})\n  }\n\n  query(type, query, variables)\n  {\n    let options\n    if (type === 0)\n    {\n      options = {\n        url: '/graphql',\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        data: {\n          \"query\": query,\n          \"variables\": variables\n        }\n      }\n    }\n    else {\n      options = {\n        url: '/graphql',\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        data: {\n          \"query\": query,\n        }\n      }\n    }\n    axios(options)\n  }\n\n  addToCart(id, quantity)\n  {\n    try{\n      let cookie = JSON.parse(Cookie.get('mi-armario'))\n      if (cookie.username !== \"\")\n      {\n        cookie.cart[id] = isNaN(cookie.cart[id]) ? parseInt(quantity.current.value, 10) : cookie.cart[id] + parseInt(quantity.current.value, 10)\n        Cookie.set('mi-armario', JSON.stringify(cookie))\n        let products = this.props.product\n        for(let i = 0; i < products.length; i++)\n        {\n          if (products[i].id === id)\n          {\n            products[i].quantity = products[i].quantity - parseInt(quantity.current.value, 10)\n          }\n        }\n        this.updateCart(cookie.cart, products)\n      }\n    }catch (e) {}\n    this.setState({show: false})\n  }\n\n  render()\n  {\n    let cookie\n    try{ cookie = JSON.parse(Cookie.get('mi-armario')) } catch (e) {}\n    let name\n    let price\n    let size\n    let id\n    let quantity\n    if (this.props.product !== undefined && 'length' in this.props.product)\n    {\n      this.props.product.forEach(product => {\n        if (product.id === this.state.product.replace(\".png\", \"\"))\n        {\n          name = 'name' in product ? product.name : \"\" \n          price = 'price' in product ? product.price : \"\"\n          size = 'size' in product ? product.size : \"\"\n          id = 'id' in product ? product.id : \"\"\n          quantity = 'quantity' in product ? product.quantity : \"\"\n        }\n      })\n      try{\n        quantity = cookie.cart[id] === undefined ? quantity : quantity - cookie.cart[id]\n      }\n      catch (e) {}\n\n      return (\n        <div>\n          {this.imgs()}\n          <Modal show={this.state.show} onHide={this.hideModal} dialogClassName=\"modal-dialog modal-dialog-centered modal-lg\">\n            <Modal.Header style={{fontSize: \"40px\"}}>{name}</Modal.Header>\n            <Modal.Body>\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <img \n                      src={`./images/${this.props.category}/${this.state.product}`}\n                      style={{width: \"500px\", height: \"500px\"}}\n                      alt=\"\">\n                    </img>\n                  </div>\n                  <div className=\"col pt-5\">\n                    <div style={ { fontSize: \"25px\" }} className=\"font-weight-bold text-primary\">\n                      {price} <small style={{fontSize: \"20px\"}} className=\"font-weight-bold\">EGP</small>\n                    </div><br/>\n                    <label className=\"font-weight-bold\" style={ { fontSize: \"25px\" }}>\n                      Size: <br />\n                      <button style={{fontSize: \"20px\"}} className=\"btn btn-outline-dark font-weight-bold text-capitalize\">{size}</button>\n                    </label><br/>\n                    <label className=\"font-weight-bold\" style={ { fontSize: \"25px\" }}>\n                      Quantity:\n                      <div className=\"input-group input-group-sm mb-3\">\n                        <input type=\"number\" min=\"0\" max={quantity} defaultValue=\"0\" ref={this.quantity} className=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"></input>\n                      </div>\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <button \n              className=\"btn btn-outline-primary\"\n              onClick={this.addToCart.bind(this, id, this.quantity)}>Add to Cart</button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n        )\n    }\n    return null\n  }\n}","import React from 'react'\nimport fetch from 'node-fetch'\nimport Product from './Product'\n\nexport default class Home extends React.Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {category: 0}\n\n    this.inactive = { fontFamily: 'Zilla Slab, serif', fontSize: 'large', fontWeight: 400 }\n    this.active = { fontFamily: 'Zilla Slab, serif', fontSize: 'large', fontWeight: 600 }\n    this.black = \"btn btn-light border border-light rounded-1 mr-2 d-flex pl-5 pr-5\"\n    this.gray = \"btn btn-outline-secondary border border-light rounded-1 mr-2 d-flex pl-5 pr-5\"\n\n    this.products = {\n      0: \"tshirts\",\n      1: \"shoes\",\n      2: \"bags\",\n      3: \"pants\",\n      4: \"jackets\"\n    }\n\n    this.setActive = this.setActive.bind(this)\n    this.setStyle = this.setStyle.bind(this)\n    this.setClass = this.setClass.bind(this)\n    this.categories = this.categories.bind(this)\n    this.getProducts = this.getProducts.bind(this)\n    this.updateCart = this.props.updateCart\n  }\n\n  async setActive(category)\n  {\n    const request = await fetch('/graphql', {\n      method: \"POST\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n      \"query\": `{picture(directory:\"${this.products[category]}\")}`\n      })\n    })\n    const json = await request.json()\n    this.setState({category: category, imgs: json.data.picture})\n  }\n\n  async getProducts()\n  {\n    const request = await fetch('/graphql', {\n      method: \"POST\",\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n      \"query\": `{product {\n        id\n        name\n        category_id\n        price\n        size\n        quantity\n      }}`\n      })\n    })\n    const json = await request.json()\n    this.setState({product: json.data.product})\n  }\n\n  setStyle(category)\n  {\n    return this.state.category === category ? this.active : this.inactive\n  }\n\n  setClass(category)\n  {\n    return this.state.category === category ? this.black : this.gray\n  }\n\n  categories()\n  {\n    const categories = {\n      0: \"T-Shirts\",\n      1: \"Shoes\",\n      2: \"Bags\",\n      3: \"Pants\",\n      4: \"Jackets\"\n    }\n    return [...Array(5).keys()].map(index => <button type=\"button\" key={index} className={this.setClass(index)} style={this.setStyle(index)} onClick={this.setActive.bind(this, index)}>{categories[index]}</button>)\n  }\n\n  async componentDidMount()\n  {\n    this.getProducts()\n    this.setActive(\"0\")\n  }\n\n  render()\n  {\n    return (\n      <div className=\"text-center\" style={{fontFamily: 'Playfair Display, serif'}}>\n        <h1 style={{fontSize: \"60px\", fontWeight: \"400\", letterSpacing: \"10px\"}}>MI ARMARIO.</h1>\n        <h3 className=\"text-secondary\" style={{fontFamily: 'El Messiri, sans-serif', fontSize: \"30px\", fontWeight: \"400\"}}>YOUR FAVOURITE CUSTOMIZED CLOSET <br/> WITH UNIQUE EXCEPTIONAL DESIGNS</h3>\n        <div className=\"row d-flex justify-content-center pt-4\">\n          {this.categories()}\n        </div>\n        <br />\n        <Product imgs={this.state.imgs} category={this.products[this.state.category]} product={this.state.product}\n        updateCart={this.updateCart}/>\n      </div>\n    )}\n}\n","import React from 'react';\n\nexport default function About(props)\n{\n    return <h1>About Us.</h1>\n}","import React from 'react'\n\nexport default function Contact(props)\n{\n    return <h1>Contact Us</h1>\n}","import React from 'react'\nimport axios from 'axios'\n\nexport default class Upload extends React.Component\n{\n    constructor(props)\n    {\n        super(props)\n        this.state = { name: \"\" }\n        this.name = React.createRef()        \n        this.price = React.createRef()\n        this.quantity = React.createRef()\n        this.size = React.createRef()\n        this.image = React.createRef()\n        this.category = React.createRef()\n        \n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    \n\n    async handleSubmit(event)\n    {\n        event.preventDefault();\n        const formData = new FormData();\n        formData.append('name', this.name.current.value)\n        formData.append('price', this.price.current.value)\n        formData.append('quantity', this.quantity.current.value)\n        formData.append('size', this.size.current.value)\n        formData.append('category', this.category.current.value)\n        formData.append('myImage', this.image.current.files[0])\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        };\n        axios.post(\"/upload\",formData,config)\n            .then((response) => {\n                alert(\"The file is successfully uploaded\");\n            }).catch((error) => {\n        });\n    }\n\n    render()\n    {\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Name:\n                    <input type=\"text\" ref={this.name}></input>\n                </label>\n                <br />\n                <label>\n                    Size:\n                    <input type=\"text\" ref={this.size}></input>\n                </label>\n                <br />\n                <label>\n                    Price:\n                    <input type=\"text\" ref={this.price}></input>\n                </label>\n                <br />\n                <label>\n                    Quantity:\n                    <input type=\"text\" ref={this.quantity}></input>\n                </label>\n                <br />\n                <label>\n                    Image:\n                    <input type=\"file\" ref={this.image} accept=\"image/*\"></input>\n                </label>\n                <br />\n                <label>\n                    Category:\n                    <select ref={this.category}>\n                        <option value=\"0\">tshirt</option>\n                        <option value=\"1\">shoes</option>\n                        <option value=\"2\">bags</option>\n                        <option value=\"3\">pants</option>\n                        <option value=\"4\">jacket</option>\n                    </select>\n                </label>\n                <br />\n                <input type=\"submit\" value=\"Submit\"></input>\n            </form>\n        )\n    }\n}","import React from 'react'\nimport Cookies from 'js-cookie'\nimport axios from 'axios'\nimport sha256 from 'js-sha256'\nimport crypto from 'crypto'\n\nexport default class Login extends React.Component \n{\n    constructor(props) {\n        super(props)\n        this.state = {user_id: \"\", username: \"\", error:true, products: []}\n        this.username = React.createRef()\n        this.password = React.createRef()\n\n        this.login = this.login.bind(this)\n        this.getProucts = this.getProucts.bind(this)\n        this.getCart = this.getCart.bind(this)\n        this.logout = this.logout.bind(this)\n        this.makeOrder = this.makeOrder.bind(this)\n        this.clearCart = this.props.clearCart\n    }\n\n    async login() {\n        if (this.username.current.value && this.password.current.value)\n        {\n            const password = sha256(this.password.current.value)\n            const username = this.username.current.value\n            const query = `{customer(input:{username: \"${username}\", password: \"${password}\", id:\"\"}){id username}}`\n            const options = {\n                url: \"http://localhost:5000/graphql\",\n                method: \"POST\",\n                headers: {'Accept': 'application/json',\n                'Content-Type': 'application/json'},\n                data: {\n                    \"query\": query\n                }\n            }\n            const response = await axios(options)\n            if (response.data.data.customer.length !== 0)\n            {\n                const cookie = JSON.parse(Cookies.get('mi-armario'))\n                cookie.user_id = response.data.data.customer[0].id\n                cookie.username = response.data.data.customer[0].username\n                Cookies.set('mi-armario', cookie)\n                this.setState({\n                    user_id: response.data.data.customer[0].id, \n                    username: response.data.data.customer[0].username})\n            }\n            else{\n                this.setState({ error: false })\n            }\n        }\n        else {\n            this.setState(\n                {error:false}\n            )\n        }\n    }\n\n    async getProucts(){\n        const query = `{product{id name}}`\n        const options = {\n            url: \"http://localhost:5000/graphql\",\n            method: \"POST\",\n            headers: {'Accept': 'application/json',\n            'Content-Type': 'application/json'},\n            data: {\n                \"query\": query\n            }\n        }\n        const response = await axios(options)\n        this.setState({products: response.data.data.product})\n    }\n\n    logout()\n    {\n        const cookie = JSON.parse(Cookies.get('mi-armario'))\n        cookie.cart = {}\n        cookie.username = \"\"\n        cookie.user_id = \"\"\n        Cookies.set('mi-armario', cookie)\n        this.clearCart()\n        this.setState({\n            user_id: \"\",\n            username: \"\",\n            cart: {}\n        })\n    }\n\n    getCart()\n    {\n        const items = []\n        if (Object.keys(this.props.cart).length > 0)\n        {\n            try{\n                Object.keys(this.props.cart).map(key => {\n                    return this.state.products.forEach(product => {\n                        if (key === product.id)\n                        {\n                            items.push(\n                                <div className=\"dropdown-item\" key={key} onClick={this.getProucts}>\n                                    {product.name}: {this.props.cart[key]}\n                                </div>\n                            )\n                        }\n                    })\n                })\n                return (<div>\n                            <label className=\"font-weight-bold\">Your Cart</label>\n                            {items}\n                            <button className=\"btn btn-outline-dark\" onClick={this.makeOrder}>Order</button>\n                        </div>)\n            }\n            catch (error) {return null}\n        }\n        else\n        {\n            return (<div>\n                <label className=\"font-weight-bold\">Your Cart is Empty</label>\n            </div>)\n        }\n    }\n\n    async makeOrder()\n    {\n        let id = crypto.randomBytes(5).toString('hex')\n        let query;\n        let variables;\n        let sale;\n        let sale_item = [];\n        let set = [];\n        let where = [];\n        let sale_item_id = []\n        let product_sets = []\n        let product_wheres = []\n        let sale_items = []\n        let product_set_vars = []\n        let product_where_vars = []\n        let sale_item_vars = []\n        let updates = []\n        let inserts = []\n\n        let cookie = JSON.parse(Cookies.get('mi-armario'))\n\n        for(let i = 0; i < this.props.products.length;i++)\n        {\n            Object.keys(this.props.cart).forEach(key => {\n                if (this.props.products[i].id === key)\n                {\n                    set.push(`\"quantity\": ${this.props.products[i].quantity}`)\n                    where.push(`\"id\": \"${key}\"`)\n                    sale_item_id.push(`\"product_id\": \"${key}\"`)\n                    sale_item.push(`\"quantity\": ${this.props.cart[key]}`)\n                }\n                \n            })\n        }\n\n        sale = `\n            \"sale\":{\n                \"sale\": {\n                    \"id\": \"${id}\",\n                    \"status\": \"pending\",\n                    \"customer_id\": \"${cookie.user_id}\"\n                  }\n            }`\n            \n\n        for (let i = 0; i < set.length; i++)\n        {\n            product_sets.push(`\"product_set${i}\": {\n                \"product\": {\n                    ${set[i]}\n                }\n            }`)\n            product_wheres.push(`\"product_where${i}\": {\n                \"product\": {\n                    ${where[i]}\n                }\n            }`)\n\n            sale_items.push(`\"sale_item${i}\": {\n                \"sale_item\": {\n                    ${sale_item[i]},\n                    ${sale_item_id[i]},\n                    \"sale_id\":\"${id}\"\n                }\n            }`)\n\n            product_set_vars.push(`$product_set${i}: Tables!`)\n            product_where_vars.push(`$product_where${i}: Tables!`)\n            sale_item_vars.push(`$sale_item${i}: Tables!`)\n        }\n\n        variables = `{\n            ${product_sets.join(\",\\n\")},\n            ${product_wheres.join(\",\\n\")},\n            ${sale},\n            ${sale_items.join(\",\\n\")}\n        }`\n\n        for(let i = 0; i < product_sets.length; i++){\n            updates.push(`product${i}: update(set:$product_set${i} where:$product_where${i})`)\n            inserts.push(`sale_item${i}: insert(input:$sale_item${i})`)\n        }\n\n        query = `mutation(\n            ${product_set_vars.join(\",\\n\")},\n            ${product_where_vars.join(\",\\n\")},\n            ${sale_item_vars.join(\",\\n\")}\n            $sale: Tables!){\n            sale: insert(input:$sale)\n            ${updates.join(\",\\n\")}\n            ${inserts.join(\",\\n\")}\n          }`\n        \n        const options = {\n            url: \"http://localhost:5000/graphql\",\n            method: \"POST\",\n            headers: {'content-type': 'application/json'},\n            data: {\n                \"query\": query,\n                \"variables\": variables\n            }\n        }\n\n        // console.log(options)\n        const response = await axios(options)\n        console.log(response)\n\n        cookie.cart = {}\n        Cookies.set('mi-armario', cookie)\n        this.clearCart()\n        this.setState({\n            cart: {}\n        })\n    }\n\n    componentDidMount() {\n        try{\n            const cookie = JSON.parse(Cookies.get('mi-armario'))\n            if (cookie.username !== \"\")\n            {\n                this.setState({username: cookie.username})\n            }\n        }\n        catch (e) {}\n        this.getProucts()\n    }\n\n    render() {\n        if (this.state.username === \"\")\n        {\n            return (\n                <div className=\"d-flex btn-group dropdown container-fluid\">\n                    <button \n                    className=\"btn btn-light border border-light rounded-1 mr-2 dropdown-toggle\"\n                    type=\"button\"\n                    style={{fontFamily: 'DM Mono, monospace', fontSize: 'small', fontWeight: 500}}\n                    data-toggle=\"dropdown\">\n                        Login\n                    </button>\n                    <div className=\"dropdown-menu dropdown-menu-right p-2\" aria-labelledby=\"dropdownMenuButton\" style={{width:\"300px\"}}>\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-bold\">Username</label>\n                            <input className=\"form-control\" type=\"text\" ref={this.username} autoComplete=\"off\"/><small className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-bold\">Password</label>\n                            <input className=\"form-control\" type=\"password\" ref={this.password}/>\n                        </div>\n                        <button className=\"btn btn-outline-dark float-right\" onClick={this.login}>Login</button>\n                        <small className=\"text-danger\" hidden={this.state.error}>*Wrong Username or Password</small>\n                    </div>\n                </div>\n            )\n        }\n        else\n        {\n            return (\n                <div className=\"d-flex btn-group dropdown container-fluid\">\n                    <button \n                    className=\"btn btn-light border border-light rounded-1 mr-2 dropdown-toggle\"\n                    type=\"button\"\n                    style={{fontFamily: 'DM Mono, monospace', fontSize: 'small', fontWeight: 500}}\n                    data-toggle=\"dropdown\">\n                        {this.state.username}\n                    </button>\n                    <div className=\"dropdown-menu dropdown-menu-right p-2\" aria-labelledby=\"dropdownMenuButton\" style={{width:\"300px\"}}>\n                        <div>\n                            {this.getCart()}\n                        </div>\n                        <div role=\"separator\" className=\"dropdown-divider\"></div>\n                        <button className=\"btn btn-outline-dark float-right\" onClick={this.logout}>Logout</button>\n                    </div>\n                </div>\n            )\n        }\n    }\n} ","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport Home from './components/Home'\nimport About from './components/About'\nimport Contact from './components/Contact'\nimport Upload from './components/Upload'\nimport axios from 'axios'\nimport Login from './components/Login'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nclass Root extends React.Component\n{\n  constructor(props) {\n    super (props);\n    this.state = {cart: {}, products: []}\n    this.updateCart = this.updateCart.bind(this)\n    this.clearCart = this.clearCart.bind(this)\n  }\n\n  updateCart(cart, products)\n  {\n    this.setState({cart: cart, products: products})\n    ReactDOM.render(\n      <Login cart={cart} clearCart={this.clearCart} products={products}/>,\n      document.getElementById('login')\n    )\n  }\n\n  clearCart() \n  {\n    this.setState({cart: {}})\n    ReactDOM.render(\n      <Login cart={{}} clearCart={this.clearCart} products={this.state.products}/>,\n      document.getElementById('login')\n    )\n  }\n\n  async componentDidMount() {\n    try\n    {\n      axios({\n        url: 'http://localhost:5000/',\n        method: 'GET',\n        withCredentials: true\n      })\n    }\n    catch (error) {\n    }\n    ReactDOM.render(\n      <Login cart={this.state.cart} clearCart={this.clearCart} products={this.state.products}/>,\n      document.getElementById('login')\n    )\n  };\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\"><Home {...this.state} updateCart={this.updateCart}/></Route>\n          <Route path=\"/about\"><About/></Route>\n          <Route path=\"/contact\"><Contact/></Route>\n          <Route path=\"/upload\"><Upload/></Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root')\n)"],"sourceRoot":""}